Handbuch: Neue Level

Beispielhaft seit ihr Team 99 (99 bitte überall durch tatsächliche Team-Nummer ersetzen).
Bitte folgendermaßen vorgehen:

- Sofern noch nicht bestehend, Verzeichnis Assets/T99/ anlegen
- File -> New Scene
	* GameObject aus der Szene entfernen: 'Main Camera'
	* GameObject -> Create Empty
	* Beliebig umbennen, idealerweise 'GameLogic' o.Ä.
	* Im Object Inspect des neuen Objektes: 'Add Component' -> 'New Script'    als T99xyz benennen, z.B. 'T99GameLogic'
	* Diese Script-Datei aus dem Assets-Ordner in Assets/T99/ verschieben
	* File -> Save Scene as...   mit beliebigem Namen unter Assets/T99/ abspeichern
- Alternativ: Bestehendes Level xyz.unity von irgendwo nach Assets/T99/ kopieren und dann in Unity öffnen
- File -> Build Settings...		Button drücken: 'Add Current'
- Level beliebig bauen
- Folgende Dinge sollten in T99GameLogic Start():
	* Sofern ihr spezielle Startpunkte für die Spieler setzen wollt, bitte Level.DefineStartPoints(...) aufrufen
	* Die floats Level.drag/Level.angularDrag steuern den omnidirektionalen Widerstand, der Schiffe zum Stoppen bringt. Gute Werte sind 0.3/1. Standard sind 0/0
	* Physics.gravity kann verwendet werden, um einen globalen Graviationsvektor zu definieren. Standard ist (0,0,0)

- Via GUI sollte das level gestartet werden. Etwa so:
    void OnGUI()
    {
        if (!Level.allowMotion)
        {
            if (GUI.Button(new Rect(Screen.width / 2 - 125, Screen.height / 2, 250, 40), "Start"))
            {
                Level.EnableMotion(true);
            }
        }
    }
	
	Level.EnableMotion(true)	versteckt Level/Schiff-Auswahl GUI-Elemente
	
- Die aktuell geladenen Schiffe können via Level.GetShips() abgerufen werden. Dies sind Instanzen, möglicherweise vier mal des gleichen Typs


